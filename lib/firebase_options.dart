// File generated by FlutterFire CLI.
// ignore_for_file: type=lint
import 'package:firebase_core/firebase_core.dart' show FirebaseOptions;
import 'package:flutter/foundation.dart'
    show defaultTargetPlatform, kIsWeb, TargetPlatform;
import 'package:flutter_dotenv/flutter_dotenv.dart';

/// Default [FirebaseOptions] for use with your Firebase apps.
///
/// Example:
/// ```dart
/// import 'firebase_options.dart';
/// // ...
/// await Firebase.initializeApp(
///   options: DefaultFirebaseOptions.currentPlatform,
/// );
/// ```
class DefaultFirebaseOptions {
  static FirebaseOptions get currentPlatform {
    if (kIsWeb) {
      throw UnsupportedError(
        'DefaultFirebaseOptions have not been configured for web - '
        'you can reconfigure this by running the FlutterFire CLI again.',
      );
    }
    switch (defaultTargetPlatform) {
      case TargetPlatform.android:
        return android;
      case TargetPlatform.iOS:
        return ios;
      case TargetPlatform.macOS:
        throw UnsupportedError(
          'DefaultFirebaseOptions have not been configured for macos - '
          'you can reconfigure this by running the FlutterFire CLI again.',
        );
      case TargetPlatform.windows:
        throw UnsupportedError(
          'DefaultFirebaseOptions have not been configured for windows - '
          'you can reconfigure this by running the FlutterFire CLI again.',
        );
      case TargetPlatform.linux:
        throw UnsupportedError(
          'DefaultFirebaseOptions are not supported for this platform.',
        );
      default:
        throw UnsupportedError(
          'DefaultFirebaseOptions are not supported for this platform.',
        );
    }
  }

  static FirebaseOptions get android => FirebaseOptions(
    apiKey: dotenv.env['ANDROID_API_KEY'] ?? 'AIzaSyBMnBUJIHt1OfNUHkrqnnFkIu0JsZPiLAM',
    appId: dotenv.env['ANDROID_APP_ID'] ?? '1:671101750738:android:b02c9cb5a465f450b8cc0b',
    messagingSenderId: dotenv.env['FIREBASE_MESSAGING_SENDER_ID'] ?? '671101750738',
    projectId: dotenv.env['FIREBASE_PROJECT_ID'] ?? 'emotiflow-b1ef1',
    storageBucket: dotenv.env['FIREBASE_STORAGE_BUCKET'] ?? 'emotiflow-b1ef1.firebasestorage.app',
  );

  static FirebaseOptions get ios => FirebaseOptions(
    apiKey: dotenv.env['IOS_API_KEY'] ?? 'AIzaSyDpfunHvYCzj8T7IjWXsv1x5kymQBTPbDY',
    appId: dotenv.env['IOS_APP_ID'] ?? '1:671101750738:ios:5a33c0e444adf1a4b8cc0b',
    messagingSenderId: dotenv.env['FIREBASE_MESSAGING_SENDER_ID'] ?? '671101750738',
    projectId: dotenv.env['FIREBASE_PROJECT_ID'] ?? 'emotiflow-b1ef1',
    storageBucket: dotenv.env['FIREBASE_STORAGE_BUCKET'] ?? 'emotiflow-b1ef1.firebasestorage.app',
  );
}
